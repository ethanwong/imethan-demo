<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd" 
	default-lazy-init="true">
	<description>Spring AMQP</description>
	
	<context:annotation-config />
	<context:component-scan base-package="cn.imethan" />
	<context:property-placeholder location="classpath:/rabbitmq/rabbitmq.properties" />
	
	<!-- 发送确认监听 -->
	<bean id="messageConfirmCallback" class="cn.imethan.rabbitmq.callback.MessageConfirmCallback"/>
	<!-- 失败回调监听 -->
	<bean id="messageReturnCallback" class="cn.imethan.rabbitmq.callback.MessageReturnCallback"/>

	<!-- 连接工厂设置 -->
	<bean id="rabbitConnectionFactory" class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory">
	   	<property name="username" value="${mq.username}"/>
	   	<property name="password" value="${mq.password}"/>
	   	<property name="virtualHost" value="${mq.virtualhost}"/>
	    <property name="host" value="${mq.host}"/>
	    <property name="port" value="${mq.port}"/>
	    <property name="channelCacheSize" value="25"/>	    
	    <property name="publisherConfirms" value="true"/>
	    <property name="publisherReturns" value="true"/>
	</bean>
	
	<bean id="rabbitTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
		<property name="connectionFactory" ref="rabbitConnectionFactory"/>
		<!-- 设置确认监听 -->
		<property name="confirmCallback" ref="messageConfirmCallback"/>
		<!-- 如果mandatory设置为true，但是不能被路由，则由returnCallback监听获取消息 -->
		<property name="mandatory" value="true"/>
		<!-- 设置失败监听 -->
		<property name="returnCallback" ref="messageReturnCallback"/>		
	    <property name="exchange" value="remoting.exchange"/>	    
	    <property name="routingKey" value="${mq.defaultqueue}"/>
	</bean>
	
	<!-- 队列创建，并且绑定 -->
	<rabbit:admin id="admin" connection-factory="rabbitConnectionFactory" />
	<rabbit:queue name="${mq.defaultqueue}" declared-by="admin" />
	
	<!-- 创建交换机并且绑定 -->
	<rabbit:direct-exchange name="remoting.exchange" declared-by="admin">
		<rabbit:bindings>
			<rabbit:binding queue="${mq.defaultqueue}" key="${mq.defaultqueue}" />
		</rabbit:bindings>
	</rabbit:direct-exchange>
	
	<!-- 监听设置 -->
	<rabbit:listener-container connection-factory="rabbitConnectionFactory">
		<rabbit:listener ref="awareRecviveListener" method="listen" queue-names="${mq.defaultqueue}"  />
	</rabbit:listener-container>
	
	<!-- 接收监听器 -->
	<bean id="awareRecviveListener" class="cn.imethan.rabbitmq.listener.AwareRecviveListener" />
	<bean id="simpleRecviveListener" class="cn.imethan.rabbitmq.listener.SimpleRecviveListener" />
</beans>